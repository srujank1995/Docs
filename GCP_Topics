
# Google Cloud Platform (GCP) Commands and Key Topics for a GCP Engineer/Consultant

## 1. Compute Engine

### Create a VM Instance
```bash
gcloud compute instances create INSTANCE_NAME --zone ZONE --machine-type MACHINE_TYPE --image-family IMAGE_FAMILY --image-project IMAGE_PROJECT
```
- **INSTANCE_NAME**: Replace with your desired instance name.
- **ZONE**: Specify the zone where the instance will be created.
- **MACHINE_TYPE**: Type of machine (e.g., `n1-standard-1`).
- **IMAGE_FAMILY**: Family of the OS image (e.g., `debian-11`).
- **IMAGE_PROJECT**: The project hosting the image (e.g., `debian-cloud`).

### Start/Stop a VM Instance
```bash
gcloud compute instances start INSTANCE_NAME --zone ZONE
gcloud compute instances stop INSTANCE_NAME --zone ZONE
```

### SSH into a VM Instance
```bash
gcloud compute ssh INSTANCE_NAME --zone ZONE
```

## 2. Kubernetes Engine (GKE)

### Create a GKE Cluster
```bash
gcloud container clusters create CLUSTER_NAME --zone ZONE --num-nodes NUM_NODES
```
- **CLUSTER_NAME**: Replace with your desired cluster name.
- **ZONE**: Specify the zone where the cluster will be created.
- **NUM_NODES**: Number of nodes in the cluster.

### Get Credentials for a Cluster
```bash
gcloud container clusters get-credentials CLUSTER_NAME --zone ZONE
```

### Deploy an Application
```bash
kubectl apply -f DEPLOYMENT_FILE.yaml
```
- **DEPLOYMENT_FILE.yaml**: Path to the YAML file defining your deployment.

### Scaling a Deployment
```bash
kubectl scale deployment DEPLOYMENT_NAME --replicas=NUM_REPLICAS
```
- **DEPLOYMENT_NAME**: Name of the deployment to scale.
- **NUM_REPLICAS**: Number of replicas to scale to.

## 3. Networking

### Create a VPC
```bash
gcloud compute networks create VPC_NAME --subnet-mode custom
```
- **VPC_NAME**: Replace with your desired VPC name.

### Create a Subnet
```bash
gcloud compute networks subnets create SUBNET_NAME --network=VPC_NAME --range=IP_RANGE --region=REGION
```
- **SUBNET_NAME**: Name of the subnet.
- **VPC_NAME**: Name of the VPC.
- **IP_RANGE**: IP range for the subnet (e.g., `10.0.0.0/24`).
- **REGION**: Region where the subnet will be created.

### Set Up Firewall Rules
```bash
gcloud compute firewall-rules create RULE_NAME --network=VPC_NAME --allow tcp:PORT --source-ranges IP_RANGE
```
- **RULE_NAME**: Name of the firewall rule.
- **VPC_NAME**: Name of the VPC.
- **PORT**: Port to allow (e.g., `80` for HTTP).
- **IP_RANGE**: Source IP range to allow (e.g., `0.0.0.0/0`).

## 4. Cloud Storage

### Create a Bucket
```bash
gsutil mb -l LOCATION gs://BUCKET_NAME/
```
- **LOCATION**: Specify the location (e.g., `us-central1`).
- **BUCKET_NAME**: Replace with your desired bucket name.

### Upload/Download Files
```bash
gsutil cp FILE_PATH gs://BUCKET_NAME/
gsutil cp gs://BUCKET_NAME/FILE_PATH LOCAL_PATH
```

### List Buckets and Objects
```bash
gsutil ls
gsutil ls gs://BUCKET_NAME/
```

## 5. Identity and Access Management (IAM)

### Add IAM Policy Binding
```bash
gcloud projects add-iam-policy-binding PROJECT_ID --member=USER_OR_SERVICE_ACCOUNT --role=ROLE
```
- **PROJECT_ID**: The ID of your Google Cloud project.
- **USER_OR_SERVICE_ACCOUNT**: The user or service account to which you are granting the role.
- **ROLE**: The IAM role to assign (e.g., `roles/viewer`).

### List IAM Roles
```bash
gcloud iam roles list
```

## 6. Cloud Functions

### Deploy a Cloud Function
```bash
gcloud functions deploy FUNCTION_NAME --runtime RUNTIME --trigger-http --entry-point ENTRY_POINT
```
- **FUNCTION_NAME**: Name of the function.
- **RUNTIME**: Runtime environment (e.g., `python39`).
- **TRIGGER_HTTP**: Trigger type.
- **ENTRY_POINT**: Entry point in the code.

### Invoke a Cloud Function
```bash
gcloud functions call FUNCTION_NAME --data '{"key":"value"}'
```
- **FUNCTION_NAME**: Name of the function.
- **DATA**: JSON data to send to the function.

## 7. Cloud SQL

### Create a Cloud SQL Instance
```bash
gcloud sql instances create INSTANCE_NAME --database-version=VERSION --tier=MACHINE_TYPE --region=REGION
```
- **INSTANCE_NAME**: Name of the Cloud SQL instance.
- **VERSION**: Database version (e.g., `MYSQL_5_7`).
- **MACHINE_TYPE**: Machine type (e.g., `db-n1-standard-1`).
- **REGION**: Region where the instance will be created.

### Connect to a Cloud SQL Instance
```bash
gcloud sql connect INSTANCE_NAME --user=USERNAME
```
- **INSTANCE_NAME**: Name of the Cloud SQL instance.
- **USERNAME**: Username for the database.

## 8. Monitoring and Logging

### View Logs in Cloud Logging
```bash
gcloud logging read "resource.type=gce_instance AND logName=projects/PROJECT_ID/logs/LOG_NAME" --limit=10
```
- **PROJECT_ID**: Your project ID.
- **LOG_NAME**: Name of the log to view.

### Create an Alert Policy
```bash
gcloud monitoring policies create --config-from-file=ALERT_POLICY.yaml
```
- **ALERT_POLICY.yaml**: Path to the YAML file defining your alert policy.

## 9. Cloud Build

### Trigger a Build
```bash
gcloud builds submit --tag gcr.io/PROJECT_ID/IMAGE_NAME
```
- **PROJECT_ID**: Your project ID.
- **IMAGE_NAME**: Name of the image to build.

## 10. BigQuery

### Run a Query
```bash
bq query --use_legacy_sql=false 'SELECT * FROM dataset.table LIMIT 10'
```

## 11. Infrastructure as Code (IaC)

### Deploy Resources Using Deployment Manager
```bash
gcloud deployment-manager deployments create DEPLOYMENT_NAME --config CONFIG_FILE.yaml
```
- **DEPLOYMENT_NAME**: Name of the deployment.
- **CONFIG_FILE.yaml**: Path to the YAML file defining your deployment.

## 12. Miscellaneous

### Set Default Project and Zone
```bash
gcloud config set project PROJECT_ID
gcloud config set compute/zone ZONE
```

### List All Resources
```bash
gcloud compute instances list
gcloud container clusters list
gcloud sql instances list
```

# Key Concepts to Understand

1. **IAM Roles and Permissions**: Understand how IAM roles work, how to assign them, and best practices for securing resources.
2. **VPC Networking, Subnets, and Firewall Rules**: Know how to set up and manage VPCs, subnets, and firewall rules to control traffic.
3. **Resource Monitoring and Logging**: Be familiar with Cloud Monitoring and Logging for tracking resource performance and identifying issues.
4. **Service Accounts and OAuth 2.0**: Understand how to use service accounts for authentication and authorization in GCP.
5. **Cost Management and Billing Alerts**: Know how to monitor costs, set up billing alerts, and optimize spending.
6. **Best Practices for Security and Compliance**: Ensure security and compliance by following best practices for data protection, encryption, and access control.
